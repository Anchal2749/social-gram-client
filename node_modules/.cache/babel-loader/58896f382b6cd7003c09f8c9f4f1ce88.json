{"ast":null,"code":"// Based on CGI::unescape. In addition does not escape / :\n// smart_escape = (string) => encodeURIComponent(string).replace(/%3A/g, \":\").replace(/%2F/g, \"/\")\nfunction smart_escape(string) {\n  let unsafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /([^a-zA-Z0-9_.\\-\\/:]+)/g;\n  return string.replace(unsafe, function (match) {\n    return match.split(\"\").map(function (c) {\n      return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    }).join(\"\");\n  });\n}\nmodule.exports = smart_escape;","map":{"version":3,"names":["smart_escape","string","unsafe","arguments","length","undefined","replace","match","split","map","c","charCodeAt","toString","toUpperCase","join","module","exports"],"sources":["C:/Users/ANCHAL MAURYA/Desktop/mern-social-media/client/node_modules/cloudinary/lib/utils/encoding/smart_escape.js"],"sourcesContent":["// Based on CGI::unescape. In addition does not escape / :\n// smart_escape = (string) => encodeURIComponent(string).replace(/%3A/g, \":\").replace(/%2F/g, \"/\")\nfunction smart_escape(string, unsafe = /([^a-zA-Z0-9_.\\-\\/:]+)/g) {\n  return string.replace(unsafe, function (match) {\n    return match.split(\"\").map(function (c) {\n      return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    }).join(\"\");\n  });\n}\n\nmodule.exports = smart_escape;\n"],"mappings":"AAAA;AACA;AACA,SAASA,YAAYA,CAACC,MAAM,EAAsC;EAAA,IAApCC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,yBAAyB;EAC9D,OAAOF,MAAM,CAACK,OAAO,CAACJ,MAAM,EAAE,UAAUK,KAAK,EAAE;IAC7C,OAAOA,KAAK,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,UAAUC,CAAC,EAAE;MACtC,OAAO,GAAG,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC;IACzD,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EACb,CAAC,CAAC;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAGhB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script"}