{"ast":null,"code":"// eslint-disable-next-line import/order\nconst config = require(\"../config\");\n\nconst https = /^http:/.test(config().upload_prefix) ? require('http') : require('https');\n\nconst querystring = require(\"querystring\");\n\nconst Q = require('q');\n\nconst url = require('url');\n\nconst utils = require(\"../utils\");\n\nconst ensureOption = require('../utils/ensureOption').defaults(config());\n\nconst {\n  extend,\n  includes,\n  isEmpty\n} = utils;\nconst agent = config.api_proxy ? new https.Agent(config.api_proxy) : null;\n\nfunction execute_request(method, params, auth, api_url, callback, options = {}) {\n  method = method.toUpperCase();\n  const deferred = Q.defer();\n  let query_params, handle_response; // declare to user later\n\n  let key = auth.key;\n  let secret = auth.secret;\n  let oauth_token = auth.oauth_token;\n  let content_type = 'application/x-www-form-urlencoded';\n\n  if (options.content_type === 'json') {\n    query_params = JSON.stringify(params);\n    content_type = 'application/json';\n  } else {\n    query_params = querystring.stringify(params);\n  }\n\n  if (method === \"GET\") {\n    api_url += \"?\" + query_params;\n  }\n\n  let request_options = url.parse(api_url);\n  request_options = extend(request_options, {\n    method: method,\n    headers: {\n      'Content-Type': content_type,\n      'User-Agent': utils.getUserAgent()\n    }\n  });\n\n  if (oauth_token) {\n    request_options.headers.Authorization = `Bearer ${oauth_token}`;\n  } else {\n    request_options.auth = key + \":\" + secret;\n  }\n\n  if (options.agent != null) {\n    request_options.agent = options.agent;\n  }\n\n  let proxy = options.api_proxy || config().api_proxy;\n\n  if (!isEmpty(proxy)) {\n    if (!request_options.agent && agent) {\n      request_options.agent = agent;\n    } else if (!request_options.agent) {\n      request_options.agent = new https.Agent(proxy);\n    } else {\n      console.warn(\"Proxy is set, but request uses a custom agent, proxy is ignored.\");\n    }\n  }\n\n  if (method !== \"GET\") {\n    request_options.headers['Content-Length'] = Buffer.byteLength(query_params);\n  }\n\n  handle_response = function (res) {\n    const {\n      hide_sensitive = false\n    } = config();\n    const sanitizedOptions = { ...request_options\n    };\n\n    if (hide_sensitive === true) {\n      if (\"auth\" in sanitizedOptions) {\n        delete sanitizedOptions.auth;\n      }\n\n      if (\"Authorization\" in sanitizedOptions.headers) {\n        delete sanitizedOptions.headers.Authorization;\n      }\n    }\n\n    if (includes([200, 400, 401, 403, 404, 409, 420, 500], res.statusCode)) {\n      let buffer = \"\";\n      let error = false;\n      res.on(\"data\", function (d) {\n        buffer += d;\n        return buffer;\n      });\n      res.on(\"end\", function () {\n        let result;\n\n        if (error) {\n          return;\n        }\n\n        try {\n          result = JSON.parse(buffer);\n        } catch (e) {\n          result = {\n            error: {\n              message: \"Server return invalid JSON response. Status Code \" + res.statusCode\n            }\n          };\n        }\n\n        if (result.error) {\n          result.error.http_code = res.statusCode;\n        } else {\n          if (res.headers[\"x-featureratelimit-limit\"]) {\n            result.rate_limit_allowed = parseInt(res.headers[\"x-featureratelimit-limit\"]);\n          }\n\n          if (res.headers[\"x-featureratelimit-reset\"]) {\n            result.rate_limit_reset_at = new Date(res.headers[\"x-featureratelimit-reset\"]);\n          }\n\n          if (res.headers[\"x-featureratelimit-remaining\"]) {\n            result.rate_limit_remaining = parseInt(res.headers[\"x-featureratelimit-remaining\"]);\n          }\n        }\n\n        if (result.error) {\n          deferred.reject(Object.assign({\n            request_options: sanitizedOptions,\n            query_params\n          }, result));\n        } else {\n          deferred.resolve(result);\n        }\n\n        if (typeof callback === \"function\") {\n          callback(result);\n        }\n      });\n      res.on(\"error\", function (e) {\n        error = true;\n        let err_obj = {\n          error: {\n            message: e,\n            http_code: res.statusCode,\n            request_options: sanitizedOptions,\n            query_params\n          }\n        };\n        deferred.reject(err_obj.error);\n\n        if (typeof callback === \"function\") {\n          callback(err_obj);\n        }\n      });\n    } else {\n      let err_obj = {\n        error: {\n          message: \"Server returned unexpected status code - \" + res.statusCode,\n          http_code: res.statusCode,\n          request_options: sanitizedOptions,\n          query_params\n        }\n      };\n      deferred.reject(err_obj.error);\n\n      if (typeof callback === \"function\") {\n        callback(err_obj);\n      }\n    }\n  };\n\n  const request = https.request(request_options, handle_response);\n  request.on(\"error\", function (e) {\n    deferred.reject(e);\n    return typeof callback === \"function\" ? callback({\n      error: e\n    }) : void 0;\n  });\n  request.setTimeout(ensureOption(options, \"timeout\", 60000));\n\n  if (method !== \"GET\") {\n    request.write(query_params);\n  }\n\n  request.end();\n  return deferred.promise;\n}\n\nmodule.exports = execute_request;","map":{"version":3,"sources":["C:/Users/ANCHAL MAURYA/Desktop/mern-social-media/client/node_modules/cloudinary/lib/api_client/execute_request.js"],"names":["config","require","https","test","upload_prefix","querystring","Q","url","utils","ensureOption","defaults","extend","includes","isEmpty","agent","api_proxy","Agent","execute_request","method","params","auth","api_url","callback","options","toUpperCase","deferred","defer","query_params","handle_response","key","secret","oauth_token","content_type","JSON","stringify","request_options","parse","headers","getUserAgent","Authorization","proxy","console","warn","Buffer","byteLength","res","hide_sensitive","sanitizedOptions","statusCode","buffer","error","on","d","result","e","message","http_code","rate_limit_allowed","parseInt","rate_limit_reset_at","Date","rate_limit_remaining","reject","Object","assign","resolve","err_obj","request","setTimeout","write","end","promise","module","exports"],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/order\nconst config = require(\"../config\");\nconst https = /^http:/.test(config().upload_prefix) ? require('http') : require('https');\nconst querystring = require(\"querystring\");\nconst Q = require('q');\nconst url = require('url');\nconst utils = require(\"../utils\");\nconst ensureOption = require('../utils/ensureOption').defaults(config());\n\nconst { extend, includes, isEmpty } = utils;\n\nconst agent = config.api_proxy ? new https.Agent(config.api_proxy) : null;\n\nfunction execute_request(method, params, auth, api_url, callback, options = {}) {\n  method = method.toUpperCase();\n  const deferred = Q.defer();\n\n  let query_params, handle_response; // declare to user later\n  let key = auth.key;\n  let secret = auth.secret;\n  let oauth_token = auth.oauth_token;\n  let content_type = 'application/x-www-form-urlencoded';\n\n  if (options.content_type === 'json') {\n    query_params = JSON.stringify(params);\n    content_type = 'application/json';\n  } else {\n    query_params = querystring.stringify(params);\n  }\n\n  if (method === \"GET\") {\n    api_url += \"?\" + query_params;\n  }\n\n  let request_options = url.parse(api_url);\n\n  request_options = extend(request_options, {\n    method: method,\n    headers: {\n      'Content-Type': content_type,\n      'User-Agent': utils.getUserAgent()\n    }\n  });\n\n  if (oauth_token) {\n    request_options.headers.Authorization = `Bearer ${oauth_token}`;\n  } else {\n    request_options.auth = key + \":\" + secret\n  }\n\n  if (options.agent != null) {\n    request_options.agent = options.agent;\n  }\n\n  let proxy = options.api_proxy || config().api_proxy;\n  if (!isEmpty(proxy)) {\n    if (!request_options.agent && agent) {\n      request_options.agent = agent;\n    } else if (!request_options.agent) {\n      request_options.agent = new https.Agent(proxy);\n    } else {\n      console.warn(\"Proxy is set, but request uses a custom agent, proxy is ignored.\");\n    }\n  }\n  if (method !== \"GET\") {\n    request_options.headers['Content-Length'] = Buffer.byteLength(query_params);\n  }\n  handle_response = function (res) {\n    const {hide_sensitive = false} = config();\n    const sanitizedOptions = {...request_options};\n\n    if (hide_sensitive === true){\n      if (\"auth\" in sanitizedOptions) { delete sanitizedOptions.auth; }\n      if (\"Authorization\" in sanitizedOptions.headers) { delete sanitizedOptions.headers.Authorization; }\n    }\n\n    if (includes([200, 400, 401, 403, 404, 409, 420, 500], res.statusCode)) {\n      let buffer = \"\";\n      let error = false;\n      res.on(\"data\", function (d) {\n        buffer += d;\n        return buffer;\n      });\n      res.on(\"end\", function () {\n        let result;\n        if (error) {\n          return;\n        }\n        try {\n          result = JSON.parse(buffer);\n        } catch (e) {\n          result = {\n            error: {\n              message: \"Server return invalid JSON response. Status Code \" + res.statusCode\n            }\n          };\n        }\n\n        if (result.error) {\n          result.error.http_code = res.statusCode;\n        } else {\n          if (res.headers[\"x-featureratelimit-limit\"]) {\n            result.rate_limit_allowed = parseInt(res.headers[\"x-featureratelimit-limit\"]);\n          }\n          if (res.headers[\"x-featureratelimit-reset\"]) {\n            result.rate_limit_reset_at = new Date(res.headers[\"x-featureratelimit-reset\"]);\n          }\n          if (res.headers[\"x-featureratelimit-remaining\"]) {\n            result.rate_limit_remaining = parseInt(res.headers[\"x-featureratelimit-remaining\"]);\n          }\n        }\n\n        if (result.error) {\n          deferred.reject(Object.assign({\n            request_options: sanitizedOptions,\n            query_params\n          }, result));\n        } else {\n          deferred.resolve(result);\n        }\n        if (typeof callback === \"function\") {\n          callback(result);\n        }\n      });\n      res.on(\"error\", function (e) {\n        error = true;\n        let err_obj = {\n          error: {\n            message: e,\n            http_code: res.statusCode,\n            request_options: sanitizedOptions,\n            query_params\n          }\n        };\n        deferred.reject(err_obj.error);\n        if (typeof callback === \"function\") {\n          callback(err_obj);\n        }\n      });\n    } else {\n      let err_obj = {\n        error: {\n          message: \"Server returned unexpected status code - \" + res.statusCode,\n          http_code: res.statusCode,\n          request_options: sanitizedOptions,\n          query_params\n        }\n      };\n      deferred.reject(err_obj.error);\n      if (typeof callback === \"function\") {\n        callback(err_obj);\n      }\n    }\n  };\n\n  const request = https.request(request_options, handle_response);\n  request.on(\"error\", function (e) {\n    deferred.reject(e);\n    return typeof callback === \"function\" ? callback({ error: e }) : void 0;\n  });\n  request.setTimeout(ensureOption(options, \"timeout\", 60000));\n  if (method !== \"GET\") {\n    request.write(query_params);\n  }\n  request.end();\n  return deferred.promise;\n}\n\nmodule.exports = execute_request;\n"]},"metadata":{},"sourceType":"script"}