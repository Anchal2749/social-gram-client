{"ast":null,"code":"const api = require('./api');\n\nconst config = require('../config');\n\nconst {\n  isEmpty,\n  isNumber,\n  compute_hash,\n  build_distribution_domain,\n  clear_blank,\n  sort_object_by_key\n} = require('../utils');\n\nconst {\n  base64Encode\n} = require('../utils/encoding/base64Encode');\n\nconst Search = class Search {\n  constructor() {\n    this.query_hash = {\n      sort_by: [],\n      aggregate: [],\n      with_field: [],\n      fields: []\n    };\n    this._ttl = 300;\n  }\n\n  static instance() {\n    return new Search();\n  }\n\n  static expression(value) {\n    return this.instance().expression(value);\n  }\n\n  static max_results(value) {\n    return this.instance().max_results(value);\n  }\n\n  static next_cursor(value) {\n    return this.instance().next_cursor(value);\n  }\n\n  static aggregate(value) {\n    return this.instance().aggregate(value);\n  }\n\n  static with_field(value) {\n    return this.instance().with_field(value);\n  }\n\n  static fields(value) {\n    return this.instance().fields(value);\n  }\n\n  static sort_by(field_name, dir = 'asc') {\n    return this.instance().sort_by(field_name, dir);\n  }\n\n  static ttl(newTtl) {\n    return this.instance().ttl(newTtl);\n  }\n\n  static execute(options, callback) {\n    return this.instance().execute(options, callback);\n  }\n\n  expression(value) {\n    this.query_hash.expression = value;\n    return this;\n  }\n\n  max_results(value) {\n    this.query_hash.max_results = value;\n    return this;\n  }\n\n  next_cursor(value) {\n    this.query_hash.next_cursor = value;\n    return this;\n  }\n\n  aggregate(value) {\n    const found = this.query_hash.aggregate.find(v => v === value);\n\n    if (!found) {\n      this.query_hash.aggregate.push(value);\n    }\n\n    return this;\n  }\n\n  with_field(value) {\n    if (Array.isArray(value)) {\n      this.query_hash.with_field = this.query_hash.with_field.concat(value);\n    } else {\n      this.query_hash.with_field.push(value);\n    }\n\n    this.query_hash.with_field = Array.from(new Set(this.query_hash.with_field));\n    return this;\n  }\n\n  fields(value) {\n    if (Array.isArray(value)) {\n      this.query_hash.fields = this.query_hash.fields.concat(value);\n    } else {\n      this.query_hash.fields.push(value);\n    }\n\n    this.query_hash.fields = Array.from(new Set(this.query_hash.fields));\n    return this;\n  }\n\n  sort_by(field_name, dir = \"desc\") {\n    let sort_bucket;\n    sort_bucket = {};\n    sort_bucket[field_name] = dir; // Check if this field name is already stored in the hash\n\n    const previously_sorted_obj = this.query_hash.sort_by.find(sort_by => sort_by[field_name]); // Since objects are references in Javascript, we can update the reference we found\n    // For example,\n\n    if (previously_sorted_obj) {\n      previously_sorted_obj[field_name] = dir;\n    } else {\n      this.query_hash.sort_by.push(sort_bucket);\n    }\n\n    return this;\n  }\n\n  ttl(newTtl) {\n    if (isNumber(newTtl)) {\n      this._ttl = newTtl;\n      return this;\n    }\n\n    throw new Error('New TTL value has to be a Number.');\n  }\n\n  to_query() {\n    Object.keys(this.query_hash).forEach(k => {\n      let v = this.query_hash[k];\n\n      if (!isNumber(v) && isEmpty(v)) {\n        delete this.query_hash[k];\n      }\n    });\n    return this.query_hash;\n  }\n\n  execute(options, callback) {\n    if (callback === null) {\n      callback = options;\n    }\n\n    options = options || {};\n    return api.search(this.to_query(), options, callback);\n  }\n\n  to_url(ttl, next_cursor, options = {}) {\n    const apiSecret = 'api_secret' in options ? options.api_secret : config().api_secret;\n\n    if (!apiSecret) {\n      throw new Error('Must supply api_secret');\n    }\n\n    const urlTtl = ttl || this._ttl;\n    const query = this.to_query();\n    let urlCursor = next_cursor;\n\n    if (query.next_cursor && !next_cursor) {\n      urlCursor = query.next_cursor;\n    }\n\n    delete query.next_cursor;\n    const dataOrderedByKey = sort_object_by_key(clear_blank(query));\n    const encodedQuery = base64Encode(JSON.stringify(dataOrderedByKey));\n    const urlPrefix = build_distribution_domain(options.source, options);\n    const signature = compute_hash(`${urlTtl}${encodedQuery}${apiSecret}`, 'sha256', 'hex');\n    const urlWithoutCursor = `${urlPrefix}/search/${signature}/${urlTtl}/${encodedQuery}`;\n    return urlCursor ? `${urlWithoutCursor}/${urlCursor}` : urlWithoutCursor;\n  }\n\n};\nmodule.exports = Search;","map":{"version":3,"sources":["C:/Users/ANCHAL MAURYA/Desktop/mern-social-media/client/node_modules/cloudinary/lib/v2/search.js"],"names":["api","require","config","isEmpty","isNumber","compute_hash","build_distribution_domain","clear_blank","sort_object_by_key","base64Encode","Search","constructor","query_hash","sort_by","aggregate","with_field","fields","_ttl","instance","expression","value","max_results","next_cursor","field_name","dir","ttl","newTtl","execute","options","callback","found","find","v","push","Array","isArray","concat","from","Set","sort_bucket","previously_sorted_obj","Error","to_query","Object","keys","forEach","k","search","to_url","apiSecret","api_secret","urlTtl","query","urlCursor","dataOrderedByKey","encodedQuery","JSON","stringify","urlPrefix","source","signature","urlWithoutCursor","module","exports"],"mappings":"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","sourcesContent":["const api = require('./api');\nconst config = require('../config');\nconst {\n  isEmpty,\n  isNumber,\n  compute_hash,\n  build_distribution_domain,\n  clear_blank,\n  sort_object_by_key\n} = require('../utils');\nconst {base64Encode} = require('../utils/encoding/base64Encode');\n\nconst Search = class Search {\n  constructor() {\n    this.query_hash = {\n      sort_by: [],\n      aggregate: [],\n      with_field: [],\n      fields: []\n    };\n    this._ttl = 300;\n  }\n\n  static instance() {\n    return new Search();\n  }\n\n  static expression(value) {\n    return this.instance().expression(value);\n  }\n\n  static max_results(value) {\n    return this.instance().max_results(value);\n  }\n\n  static next_cursor(value) {\n    return this.instance().next_cursor(value);\n  }\n\n  static aggregate(value) {\n    return this.instance().aggregate(value);\n  }\n\n  static with_field(value) {\n    return this.instance().with_field(value);\n  }\n\n  static fields(value) {\n    return this.instance().fields(value);\n  }\n\n  static sort_by(field_name, dir = 'asc') {\n    return this.instance().sort_by(field_name, dir);\n  }\n\n  static ttl(newTtl) {\n    return this.instance().ttl(newTtl);\n  }\n\n  static execute(options, callback) {\n    return this.instance().execute(options, callback);\n  }\n\n  expression(value) {\n    this.query_hash.expression = value;\n    return this;\n  }\n\n  max_results(value) {\n    this.query_hash.max_results = value;\n    return this;\n  }\n\n  next_cursor(value) {\n    this.query_hash.next_cursor = value;\n    return this;\n  }\n\n  aggregate(value) {\n    const found = this.query_hash.aggregate.find(v => v === value);\n\n    if (!found) {\n      this.query_hash.aggregate.push(value);\n    }\n\n    return this;\n  }\n\n  with_field(value) {\n    if (Array.isArray(value)) {\n      this.query_hash.with_field = this.query_hash.with_field.concat(value);\n    } else {\n      this.query_hash.with_field.push(value);\n    }\n\n    this.query_hash.with_field = Array.from(new Set(this.query_hash.with_field));\n    return this;\n  }\n\n  fields(value) {\n    if (Array.isArray(value)) {\n      this.query_hash.fields = this.query_hash.fields.concat(value);\n    } else {\n      this.query_hash.fields.push(value);\n    }\n\n    this.query_hash.fields = Array.from(new Set(this.query_hash.fields));\n    return this;\n  }\n\n  sort_by(field_name, dir = \"desc\") {\n    let sort_bucket;\n    sort_bucket = {};\n    sort_bucket[field_name] = dir;\n\n    // Check if this field name is already stored in the hash\n    const previously_sorted_obj = this.query_hash.sort_by.find((sort_by) => sort_by[field_name]);\n\n    // Since objects are references in Javascript, we can update the reference we found\n    // For example,\n    if (previously_sorted_obj) {\n      previously_sorted_obj[field_name] = dir;\n    } else {\n      this.query_hash.sort_by.push(sort_bucket);\n    }\n\n    return this;\n  }\n\n  ttl(newTtl) {\n    if (isNumber(newTtl)) {\n      this._ttl = newTtl;\n      return this;\n    }\n\n    throw new Error('New TTL value has to be a Number.');\n  }\n\n  to_query() {\n    Object.keys(this.query_hash).forEach((k) => {\n      let v = this.query_hash[k];\n      if (!isNumber(v) && isEmpty(v)) {\n        delete this.query_hash[k];\n      }\n    });\n    return this.query_hash;\n  }\n\n  execute(options, callback) {\n    if (callback === null) {\n      callback = options;\n    }\n    options = options || {};\n    return api.search(this.to_query(), options, callback);\n  }\n\n  to_url(ttl, next_cursor, options = {}) {\n    const apiSecret = 'api_secret' in options ? options.api_secret : config().api_secret;\n    if (!apiSecret) {\n      throw new Error('Must supply api_secret');\n    }\n\n    const urlTtl = ttl || this._ttl;\n\n    const query = this.to_query();\n\n    let urlCursor = next_cursor;\n    if (query.next_cursor && !next_cursor) {\n      urlCursor = query.next_cursor;\n    }\n    delete query.next_cursor;\n\n    const dataOrderedByKey = sort_object_by_key(clear_blank(query));\n    const encodedQuery = base64Encode(JSON.stringify(dataOrderedByKey));\n\n    const urlPrefix = build_distribution_domain(options.source, options);\n\n    const signature = compute_hash(`${urlTtl}${encodedQuery}${apiSecret}`, 'sha256', 'hex');\n\n    const urlWithoutCursor = `${urlPrefix}/search/${signature}/${urlTtl}/${encodedQuery}`;\n    return urlCursor ? `${urlWithoutCursor}/${urlCursor}` : urlWithoutCursor;\n  }\n};\n\nmodule.exports = Search;\n"]},"metadata":{},"sourceType":"script"}