{"ast":null,"code":"const utils = require(\"../utils\");\n\nconst config = require(\"../config\");\n\nconst ensureOption = require('../utils/ensureOption').defaults(config());\n\nconst execute_request = require(\"./execute_request\");\n\nconst {\n  ensurePresenceOf\n} = utils;\n\nfunction call_analysis_api(method, uri, params, callback, options) {\n  ensurePresenceOf({\n    method,\n    uri\n  });\n  const api_url = utils.base_api_url_v2()(uri, options);\n  let auth = {};\n\n  if (options.oauth_token || config().oauth_token) {\n    auth = {\n      oauth_token: ensureOption(options, \"oauth_token\")\n    };\n  } else {\n    auth = {\n      key: ensureOption(options, \"api_key\"),\n      secret: ensureOption(options, \"api_secret\")\n    };\n  }\n\n  options.content_type = 'json';\n  return execute_request(method, params, auth, api_url, callback, options);\n}\n\nmodule.exports = {\n  call_analysis_api\n};","map":{"version":3,"sources":["C:/Users/ANCHAL MAURYA/Desktop/mern-social-media/client/node_modules/cloudinary/lib/api_client/call_analysis_api.js"],"names":["utils","require","config","ensureOption","defaults","execute_request","ensurePresenceOf","call_analysis_api","method","uri","params","callback","options","api_url","base_api_url_v2","auth","oauth_token","key","secret","content_type","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAME,YAAY,GAAGF,OAAO,CAAC,uBAAD,CAAP,CAAiCG,QAAjC,CAA0CF,MAAM,EAAhD,CAArB;;AACA,MAAMG,eAAe,GAAGJ,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAM;AAACK,EAAAA;AAAD,IAAqBN,KAA3B;;AAEA,SAASO,iBAAT,CAA2BC,MAA3B,EAAmCC,GAAnC,EAAwCC,MAAxC,EAAgDC,QAAhD,EAA0DC,OAA1D,EAAmE;AACjEN,EAAAA,gBAAgB,CAAC;AACfE,IAAAA,MADe;AAEfC,IAAAA;AAFe,GAAD,CAAhB;AAIA,QAAMI,OAAO,GAAGb,KAAK,CAACc,eAAN,GAAwBL,GAAxB,EAA6BG,OAA7B,CAAhB;AACA,MAAIG,IAAI,GAAG,EAAX;;AACA,MAAIH,OAAO,CAACI,WAAR,IAAuBd,MAAM,GAAGc,WAApC,EAAiD;AAC/CD,IAAAA,IAAI,GAAG;AACLC,MAAAA,WAAW,EAAEb,YAAY,CAACS,OAAD,EAAU,aAAV;AADpB,KAAP;AAGD,GAJD,MAIO;AACLG,IAAAA,IAAI,GAAG;AACLE,MAAAA,GAAG,EAAEd,YAAY,CAACS,OAAD,EAAU,SAAV,CADZ;AAELM,MAAAA,MAAM,EAAEf,YAAY,CAACS,OAAD,EAAU,YAAV;AAFf,KAAP;AAID;;AACDA,EAAAA,OAAO,CAACO,YAAR,GAAuB,MAAvB;AAEA,SAAOd,eAAe,CAACG,MAAD,EAASE,MAAT,EAAiBK,IAAjB,EAAuBF,OAAvB,EAAgCF,QAAhC,EAA0CC,OAA1C,CAAtB;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiB;AACfd,EAAAA;AADe,CAAjB","sourcesContent":["const utils = require(\"../utils\");\nconst config = require(\"../config\");\nconst ensureOption = require('../utils/ensureOption').defaults(config());\nconst execute_request = require(\"./execute_request\");\n\nconst {ensurePresenceOf} = utils;\n\nfunction call_analysis_api(method, uri, params, callback, options) {\n  ensurePresenceOf({\n    method,\n    uri\n  });\n  const api_url = utils.base_api_url_v2()(uri, options);\n  let auth = {};\n  if (options.oauth_token || config().oauth_token) {\n    auth = {\n      oauth_token: ensureOption(options, \"oauth_token\")\n    };\n  } else {\n    auth = {\n      key: ensureOption(options, \"api_key\"),\n      secret: ensureOption(options, \"api_secret\")\n    };\n  }\n  options.content_type = 'json';\n\n  return execute_request(method, params, auth, api_url, callback, options);\n}\n\nmodule.exports = {\n  call_analysis_api\n};\n"]},"metadata":{},"sourceType":"script"}